local camera = require('libs.camera')

function init(self)
	self.transition_pred = render.predicate({'transition'})
	self.tile_pred = render.predicate({"tile"})
	self.constants = render.constant_buffer()

	self.time = vmath.vector4(0, 0, 0, 0)
	self.view = vmath.matrix4()
end

function update(self)
	camera.width = render.get_window_width()
	camera.height = render.get_window_height()
	render.clear({[render.BUFFER_COLOR_BIT] = vmath.vector4(0), [render.BUFFER_DEPTH_BIT] = 1, [render.BUFFER_STENCIL_BIT] = 0})

	render.set_view(self.view)

	local hw, hh = camera.width / 2, camera.height / 2
	local proj = vmath.matrix4_orthographic(-hw, hw, -hh, hh, 1000, -1000)
	render.set_projection(proj)

	self.time.x = camera.time
	self.constants.time = self.time

	render.enable_state(render.STATE_DEPTH_TEST)
	render.enable_state(render.STATE_CULL_FACE)
	render.enable_state(render.STATE_BLEND)
	render.set_blend_func(render.BLEND_SRC_ALPHA, render.BLEND_ONE_MINUS_SRC_ALPHA)
	render.set_depth_mask(true)

	render.draw(self.tile_pred)
	render.draw(self.transition_pred, self.constants)
end